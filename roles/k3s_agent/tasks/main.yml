---
- name: Check for PXE-booted system
  block:
      - name: Check if system is PXE-booted
        ansible.builtin.command:
            cmd: cat /proc/cmdline
        register: boot_cmdline
        changed_when: false
        check_mode: false

      - name: Set fact for PXE-booted system
        ansible.builtin.set_fact:
            is_pxe_booted: "{{ 'root=/dev/nfs' in boot_cmdline.stdout }}"
        when: boot_cmdline.stdout is defined

      - name: Include http_proxy configuration tasks
        ansible.builtin.include_tasks: http_proxy.yml

- name: Deploy K3s http_proxy conf
  include_tasks: http_proxy.yml
  when: proxy_env is defined

- name: Configure the k3s service
  ansible.builtin.template:
      src: 'k3s.service.j2'
      dest: '{{ systemd_dir }}/k3s-node.service'
      owner: root
      group: root
      mode: '0755'

- name: Check if kubectl is installed
  ansible.builtin.command:
      cmd: which kubectl
  register: kubectl_installed
  ignore_errors: true
  changed_when: false

- name: Install kubectl
  ansible.builtin.package:
      name: kubectl
      state: present
  when: kubectl_installed.rc != 0

- name: Manage k3s service
  ansible.builtin.systemd:
      name: k3s-node
      daemon_reload: true
      state: restarted
      enabled: true

- name: Get service info
  ansible.builtin.shell:
      cmd: "kubectl get service k3s-node -o jsonpath='{.status.loadBalancer.ingress[0].ip}:{.spec.ports[0].port}'"
  register: service_info
  changed_when: false
  check_mode: false

- name: Print service info
  ansible.builtin.debug:
      msg: 'The service is running at {{ service_info.stdout }}'
